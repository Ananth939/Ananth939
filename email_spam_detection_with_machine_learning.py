# -*- coding: utf-8 -*-
"""Email Spam Detection with machine learning

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AGZYQEQR1_45nKVewBit29Dplz1pCTgg

email_spam_using_Naive_bayes_
"""

#import pandas library to read files
import pandas as pd

#reading dataset
df = pd.read_csv("spam.csv", encoding='ISO-8859-1')
df.head()

df.shape

# Drop unnecessary columns from the DataFrame

columns_to_drop = ["Unnamed: 2", "Unnamed: 3", "Unnamed: 4"]
df.drop(columns=columns_to_drop, inplace=True)

df.groupby('v1').describe()

df['spam']=df['v1'].apply(lambda x: 1 if x=='spam' else 0)
df.head()

df.isnull().sum()

# Let's rename the columns "v1 and "v2" to new names

new_column_names = {"v1":"Category","v2":"Message"}
df.rename(columns = new_column_names,inplace = True)

"""Data Visualisation"""

# Libraries for visualisation

import matplotlib.pyplot as plt

plt.pie(df['Category'].value_counts(),labels=['ham','spam'],autopct='%0.2f')
plt.show()

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df.Message,df.spam)

from sklearn.feature_extraction.text import CountVectorizer
v = CountVectorizer()
X_train_count = v.fit_transform(X_train.values)
X_train_count.toarray()[:2]

from sklearn.naive_bayes import MultinomialNB
model = MultinomialNB()
model.fit(X_train_count,y_train)

email = ["Congratulations on your recent achievement! Well done."]

email_count = v.transform(email)
model.predict(email_count)

X_test_count = v.transform(X_test)
model.score(X_test_count, y_test)

"""**Sklearn Pipeline**"""

from sklearn.pipeline import Pipeline
clf = Pipeline([
    ('vectorizer', CountVectorizer()),
    ('nb', MultinomialNB())
])

clf.fit(X_train, y_train)

clf.score(X_test,y_test)

prediction=clf.predict(email)

print(prediction)

if(prediction[0]==1):
    print("Ham Mail")
else:
    print("Spam Mail")

emails_2 = [
    'Hey mohan, can we get together to watch footbal game tomorrow?',
    'Upto 20% discount on parking, exclusive offer just for you. Dont miss this reward!'
]
email2_count = v.transform(emails_2)
prediction=model.predict(email2_count)
print(prediction)

if(prediction[0]==1):
    print("Ham Mail")
else:
    print("Spam Mail")

